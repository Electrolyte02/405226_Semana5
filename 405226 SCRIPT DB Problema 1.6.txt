USE "405226_Problema1.6"
GO

CREATE TABLE Estados_Camiones(
id_estado_camion int IDENTITY(1,1),
estado varchar(30)
CONSTRAINT pk_estado_camion PRIMARY KEY(id_estado_camion)); 

CREATE TABLE Camiones(
id_camion int IDENTITY(1,1),
patente varchar(20),
estado_camion int,
peso_maximo int,
fecha_baja datetime
CONSTRAINT pk_camiones PRIMARY KEY(id_camion),
CONSTRAINT fk_estado_camion FOREIGN KEY(estado_camion)
REFERENCES Estados_Camiones(id_estado_camion));

CREATE TABLE Tipos_Carga(
id_tipo_carga int IDENTITY(1,1),
nombre varchar(30)
CONSTRAINT pk_tipos_carga PRIMARY KEY (id_tipo_carga));

CREATE TABLE Cargas(
id_carga int,
peso decimal(10,2),
tipo_carga int,
id_camion int 
CONSTRAINT pk_carga PRIMARY KEY(id_carga),
CONSTRAINT fk_carga_tipo FOREIGN KEY(tipo_carga)
REFERENCES Tipos_Carga(id_tipo_carga),
CONSTRAINT fk_carga_camion FOREIGN KEY (id_camion)
REFERENCES Camiones(id_camion));

INSERT INTO Tipos_Carga(nombre) VALUES('Packing');
INSERT INTO Tipos_Carga(nombre) VALUES('Cajas');
INSERT INTO Tipos_Carga(nombre) VALUES('Bidones');

INSERT INTO Estados_Camiones(estado) VALUES('Disponible');
INSERT INTO Estados_Camiones(estado) VALUES('En Reparacion');
INSERT INTO Estados_Camiones(estado) VALUES('De Viaje');

CREATE PROCEDURE SP_PROXIMO_CAMION
@next int OUTPUT
AS
BEGIN
    SET @next = (SELECT max(id_camion)+1 FROM Camiones);
END

CREATE PROCEDURE SP_CONSULTAR_ESTADOS
AS
BEGIN
SELECT * FROM Estados_Camiones
END

CREATE PROCEDURE SP_CONSULTAR_TIPOS_CARGA
AS
BEGIN
SELECT * FROM Tipos_Carga
END

CREATE PROCEDURE SP_INSERTAR_CAMION
@patente varchar(30),
@estadoCamion int,
@pesoMax int,
@proxCamion int output
AS
BEGIN
INSERT INTO Camiones(patente,estado_camion,peso_maximo) VALUES (@patente,@estadoCamion,@pesoMax)
SET @proxCamion = SCOPE_IDENTITY();
END

CREATE PROCEDURE SP_INSERTAR_CARGA
@idCamion int,
@pesoCarga decimal(10,2),
@tipoCarga int
AS
INSERT INTO Cargas(peso,tipo_carga,id_camion)
VALUES(@pesoCarga,@tipoCarga,@idCamion)
END

CREATE PROCEDURE SP_CONSULTAR_CAMIONES
@patente varchar(30),
@id_estado int
AS
BEGIN
SELECT id_camion, patente, estado,peso_maximo
FROM Camiones C JOIN Estados_Camiones E
	ON c.estado_camion=e.id_estado_camion
WHERE (patente LIKE '%'+@patente+'%')
AND c.estado_camion=@id_estado
AND c.fecha_baja IS NULL
END

CREATE PROCEDURE SP_CONSULTAR_CAMIONES_MENOR
@patente varchar(30),
@id_estado int,
@peso_max int
AS
BEGIN
SELECT id_camion, patente, estado,peso_maximo
FROM Camiones C JOIN Estados_Camiones E
	ON c.estado_camion=e.id_estado_camion
WHERE (patente LIKE'%'+@patente+'%')
AND c.estado_camion=@id_estado
AND peso_maximo<@peso_max
AND c.fecha_baja IS NULL
END

CREATE PROCEDURE SP_CONSULTAR_CAMIONES_MAYOR
@patente varchar(30),
@id_estado int,
@peso_max int
AS
BEGIN
SELECT id_camion, patente, estado,peso_maximo
FROM Camiones C JOIN Estados_Camiones E
	ON c.estado_camion=e.id_estado_camion
WHERE (patente LIKE'%'+@patente+'%')
AND c.estado_camion=@id_estado
AND peso_maximo>@peso_max
AND c.fecha_baja IS NULL
END

CREATE PROCEDURE SP_CONSULTAR_CAMION
@id_camion int
AS
BEGIN
SELECT id_camion, patente, estado_camion, estado,peso_maximo
FROM Camiones C JOIN Estados_Camiones E
	ON c.estado_camion=e.id_estado_camion
WHERE id_camion=@id_camion
END

CREATE PROCEDURE SP_CONSULTAR_CARGAS_CAMION
@id_camion int
AS 
BEGIN
SELECT id_carga, peso, tipo_carga, nombre
	FROM Cargas c JOIN Tipos_Carga t
		ON c.tipo_carga=t.id_tipo_carga
WHERE id_camion=@id_camion
END

CREATE PROCEDURE SP_CONSULTAR_CANT_CARGAS
AS
BEGIN
SELECT count(id_carga),t.nombre
FROM Cargas c JOIN Tipos_carga t
	ON c.tipo_carga=t.id_tipo_carga
GROUP BY c.tipo_carga,t.nombre
END

CREATE PROCEDURE SP_ACTUALIZAR_CAMION
@patente varchar(20),
@id_camion int, 
@estado_camion int,
@peso_maximo int
AS
BEGIN
UPDATE Camiones
SET patente=@patente,
estado_camion=@estado_camion,
peso_maximo=@peso_maximo
WHERE id_camion=@id_camion
END

CREATE PROCEDURE SP_BORRAR_CARGAS
@id_camion int = null
AS
BEGIN
DELETE Cargas
WHERE id_camion=@id_camion
END

CREATE PROCEDURE SP_BORRAR_CAMION
@id_camion int = null
AS
BEGIN
UPDATE Camiones
SET fecha_baja = getdate()
WHERE id_camion=@id_camion
END
